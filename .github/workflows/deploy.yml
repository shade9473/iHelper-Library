name: Comprehensive Resource Library Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

env:
  NODE_VERSION: 20
  NPM_VERSION: 9

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Verify Connectivity
        run: node scripts/verify-origin.js
      
      - name: Security Vulnerability Scan
        run: npm audit --audit-level=high

  test:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Unit Tests
        run: npm run test:unit
      
      - name: Run Integration Tests
        run: npm run test:integration

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build Project
        run: npm run build
        env:
          VITE_BUILD_TIMESTAMP: ${{ github.event.repository.updated_at }}
      
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      
      - name: Deploy to CloudFlare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist
      
      - name: Deployment Notification
        if: success()
        run: |
          echo "Deployment successful! Version ${{ github.sha }} deployed."
      
      - name: Deployment Failure Notification
        if: failure()
        run: |
          echo "Deployment failed. Initiating rollback procedures."
          exit 1

  performance-check:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Performance Audit
        uses: lighthouse-ci/reporter@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          urls: |
            https://ihelper-resource-library.pages.dev
          budgetPath: .github/lighthouse-budget.json
